<h1>Productos</h1>
<div>
  {{#if user}}
    <p>Bienvenido, {{user.first_name}} {{user.last_name}}! </p>
      <a href="/profile">
        <button>Mi perfil</button>
      </a>
  {{else}}
    <a href="/login">Iniciar sesi√≥n</a>
    <a href="/register">Registrarse</a>
  {{/if}}
</div>

{{#if user}}
  {{#unless (eq user.role 'admin')}}
    <a href="/api/carts/mycart">
      <button>Mi Carrito</button>
    </a>
  {{/unless}}
{{/if}}

<div>
  {{#if user}}
    {{#if (eq user.role 'admin')}}
      <a href="/realtimeproducts">Productos en tiempo real (Admin)</a>
    {{/if}}
  {{/if}}
</div>

<div>
  <label for="category">Filtrar por categor√≠a:</label>
  <select id="category" onchange="applyFilters()">
    <option value="">Todas</option>
    <option value="Apple" {{#eq query "Apple"}}selected{{/eq}}>Apple</option>
    <option value="Teclados" {{#eq query "Teclados"}}selected{{/eq}}>Teclados</option>
  </select>

  <label for="sort">Ordenar por precio:</label>
  <select id="sort" onchange="applyFilters()">
    <option value="">Sin orden</option>
    <option value="asc" {{#if (eq sort 'asc')}}selected{{/if}}>Menor a mayor</option>
    <option value="desc" {{#if (eq sort 'desc')}}selected{{/if}}>Mayor a menor</option>
  </select>
</div>

<ul>
    {{#each payload}}
        <li>
            <strong>{{this.title}}</strong> - ${{this.price}}
            <p>{{this.description}}</p>
            <p>Stock: {{this.stock}}</p>
            <img src="{{this.thumbnail}}" alt="{{this.title}}" width="200">
            {{#if ../user}}
                {{#if (eq ../user.role 'user')}}
                    <button 
                        class="add-to-cart-btn" 
                        data-product-id="{{this._id}}"
                    >
                        Agregar al carrito
                    </button>
                {{/if}}
            {{/if}}
        </li>
    {{else}}
        <p>No hay productos disponibles.</p>
    {{/each}}
</ul>

{{#if hasPrevPage}}
    <a href="{{prevLink}}">Anterior</a>
{{/if}}
{{#if hasNextPage}}
    <a href="{{nextLink}}">Siguiente</a>
{{/if}}

<script>
    function setSelectValuesFromURL() {
        const urlParams = new URLSearchParams(window.location.search);
            
        const category = urlParams.get('query');
        if (category) {
            document.getElementById('category').value = category;
        }
            
        const sort = urlParams.get('sort');
        if (sort) {
            document.getElementById('sort').value = sort;
        }
    }

    function applyFilters() {
        const category = document.getElementById('category').value;
        const sort = document.getElementById('sort').value;

        const url = new URL(window.location.href);

        if (category) {
            url.searchParams.set('query', category);
        } else {
            url.searchParams.delete('query');
            if (url.pathname !== '/products') url.pathname = '/products';
        }

        if (sort) {
            url.searchParams.set('sort', sort);
        } else {
            url.searchParams.delete('sort');
        }

        url.searchParams.delete('page');

        window.location.href = url.toString();
    }

    async function addToCart(productId) {
        try {
            {{#if user}}
                const cartId = '{{user.cart}}';
                if (!cartId || cartId === 'null' || cartId === 'undefined') {
                throw new Error('No tienes un carrito asignado');
                }
                const response = await fetch(`/api/carts/${cartId}/products/${productId}`, { 
                    method: 'POST',
                    headers: { 
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    },
                    credentials: 'include'
                });
                
                if (!response.ok) throw new Error(await response.text());
                alert('‚úÖ Producto agregado!');
            {{else}}
                throw new Error('üîí Debes iniciar sesi√≥n');
            {{/if}}
        } catch (error) {
            console.error('Error:', error);
            alert(error.message);
            {{#unless user}}
                window.location.href = '/login';
            {{/unless}}
        }
    }

    document.querySelectorAll('.add-to-cart-btn').forEach(button => {
        button.addEventListener('click', () => {
            const productId = button.dataset.productId;
            addToCart(productId);
        });
    });
</script>